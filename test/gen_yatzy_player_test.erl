-module(gen_yatzy_player_test).

% -compile(export_all).

-include_lib("eunit/include/eunit.hrl").

setup() ->
	gen_yatzy_player:start_link('P11'),
	gen_yatzy_player:start_link('P22'),
	gen_yatzy_player:start_link('P33'),
	gen_yatzy_player:start_link('P44'),
	gen_yatzy_player:fill('P11', ones, [1,1,1,1,1]),
	gen_yatzy_player:fill('P11', twos, [2,2,2,1,1]),
	gen_yatzy_player:fill('P11', threes, [1,3,3,1,1]),
	gen_yatzy_player:fill('P11', fours, [1,4,4,4,1]),
	gen_yatzy_player:fill('P11', one_pair, [1,1,3,2,1]),
	gen_yatzy_player:fill('P11', two_pair, [2,2,1,1,5]),
	gen_yatzy_player:fill('P11', chance, [1,2,3,5,6]),
	gen_yatzy_player:fill('P11', small_straight, [1,2,3,4,5]),
	gen_yatzy_player:fill('P11', full_house, [1,1,1,2,2]),
	gen_yatzy_player:fill('P22', fours, [1,4,4,4,1]),
	gen_yatzy_player:fill('P22', fives, [1,5,5,1,1]),
	gen_yatzy_player:fill('P22', sixes, [1,6,6,6,6]),
	gen_yatzy_player:fill('P22', one_pair, [1,1,3,2,1]),
	gen_yatzy_player:fill('P22', two_pair, [2,2,1,1,5]),
	gen_yatzy_player:fill('P22', three_of_a_kind, [3,3,3,1,1]),
	gen_yatzy_player:fill('P22', four_of_a_kind, [2,2,2,2,1]),
	gen_yatzy_player:fill('P33', ones, [1,1,1,1,1]),
	gen_yatzy_player:fill('P33', twos, [2,2,2,1,1]),
	gen_yatzy_player:fill('P33', threes, [1,3,3,1,1]),
	gen_yatzy_player:fill('P33', fours, [1,4,4,4,1]),
	gen_yatzy_player:fill('P33', one_pair, [1,1,3,2,1]),
	gen_yatzy_player:fill('P33', small_straight, [1,2,3,4,5]),
	gen_yatzy_player:fill('P33', large_straight, [2,3,4,5,6]),
	gen_yatzy_player:fill('P33', full_house, [1,1,1,2,2]),
	gen_yatzy_player:fill('P44', ones, [1,1,1,1,1]),
	gen_yatzy_player:fill('P44', twos, [2,2,2,1,1]),
	gen_yatzy_player:fill('P44', threes, [1,3,3,1,1]),
	gen_yatzy_player:fill('P44', one_pair, [1,1,3,2,1]),
	gen_yatzy_player:fill('P44', two_pair, [2,2,1,1,5]),
	gen_yatzy_player:fill('P44', small_straight, [1,2,3,4,5]),
	gen_yatzy_player:fill('P44', large_straight, [2,3,4,5,6]),
	gen_yatzy_player:fill('P44', full_house, [1,1,1,2,2]).

fill_test() ->
	gen_yatzy_player:start_link('P11'),
	gen_yatzy_player:start_link('P22'),
	gen_yatzy_player:start_link('P33'),
	gen_yatzy_player:start_link('P44'),
	?assertEqual({ok, 5}, gen_yatzy_player:fill('P11', ones, [1,1,1,1,1])),
	?assertEqual({error, already_filled}, gen_yatzy_player:fill('P11', ones, [1,1,1,1,1])),
	?assertEqual({error, invalid_slot}, gen_yatzy_player:fill('P11', dos, [1,1,1,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P11', twos, [2,2,2,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P11', threes, [1,3,3,1,1])),
	?assertEqual({ok, 12}, gen_yatzy_player:fill('P11', fours, [1,4,4,4,1])),
	?assertEqual({ok, 2}, gen_yatzy_player:fill('P11', one_pair, [1,1,3,2,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P11', two_pairs, [2,2,1,1,5])),
	?assertEqual({ok, 17}, gen_yatzy_player:fill('P11', chance, [1,2,3,5,6])),
	?assertEqual({ok, 15}, gen_yatzy_player:fill('P11', small_straight, [1,2,3,4,5])),
	?assertEqual({ok, 7}, gen_yatzy_player:fill('P11', full_house, [1,1,1,2,2])),
	?assertEqual({ok, 12}, gen_yatzy_player:fill('P22', fours, [1,4,4,4,1])),
	?assertEqual({error, already_filled}, gen_yatzy_player:fill('P11', fours, [1,1,1,1,1])),
	?assertEqual({error, invalid_slot}, gen_yatzy_player:fill('P11', sevens, [1,1,1,1,1])),
	?assertEqual({ok, 10}, gen_yatzy_player:fill('P22', fives, [1,5,5,1,1])),
	?assertEqual({ok, 24}, gen_yatzy_player:fill('P22', sixes, [1,6,6,6,6])),
	?assertEqual({ok, 2}, gen_yatzy_player:fill('P22', one_pair, [1,1,3,2,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P22', two_pairs, [2,2,1,1,5])),
	?assertEqual({ok, 9}, gen_yatzy_player:fill('P22', three_of_a_kind, [3,3,3,1,1])),
	?assertEqual({ok, 8}, gen_yatzy_player:fill('P22', four_of_a_kind, [2,2,2,2,1])),
	?assertEqual({ok, 5}, gen_yatzy_player:fill('P33', ones, [1,1,1,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P33', twos, [2,2,2,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P33', threes, [1,3,3,1,1])),
	?assertEqual({ok, 12}, gen_yatzy_player:fill('P33', fours, [1,4,4,4,1])),
	?assertEqual({error, already_filled}, gen_yatzy_player:fill('P11', fours, [1,1,1,1,1])),
	?assertEqual({error, invalid_slot}, gen_yatzy_player:fill('P11', sevens, [1,1,1,1,1])),
	?assertEqual({ok, 2}, gen_yatzy_player:fill('P33', one_pair, [1,1,3,2,1])),
	?assertEqual({ok, 15}, gen_yatzy_player:fill('P33', small_straight, [1,2,3,4,5])),
	?assertEqual({ok, 20}, gen_yatzy_player:fill('P33', large_straight, [2,3,4,5,6])),
	?assertEqual({ok, 7}, gen_yatzy_player:fill('P33', full_house, [1,1,1,2,2])),
	?assertEqual({ok, 5}, gen_yatzy_player:fill('P44', ones, [1,1,1,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P44', twos, [2,2,2,1,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P44', threes, [1,3,3,1,1])),
	?assertEqual({error, already_filled}, gen_yatzy_player:fill('P11', threes, [1,1,1,1,1])),
	?assertEqual({error, invalid_slot}, gen_yatzy_player:fill('P11', sevens, [1,1,1,1,1])),
	?assertEqual({ok, 2}, gen_yatzy_player:fill('P44', one_pair, [1,1,3,2,1])),
	?assertEqual({ok, 6}, gen_yatzy_player:fill('P44', two_pairs, [2,2,1,1,5])),
	?assertEqual({ok, 15}, gen_yatzy_player:fill('P44', small_straight, [1,2,3,4,5])),
	?assertEqual({ok, 20}, gen_yatzy_player:fill('P44', large_straight, [2,3,4,5,6])),
	?assertEqual({ok, 7}, gen_yatzy_player:fill('P44', full_house, [1,1,1,2,2])).

 sheet_test() ->
 	?assertEqual(#{chance => 17, fours => 12, full_house => 7, one_pair => 2, ones => 5, 
 			small_straight => 15, threes => 6, two_pairs => 6, twos => 6}, gen_yatzy_player:sheet('P11')),
 	?assertEqual(#{fives => 10, four_of_a_kind => 8, fours => 12, one_pair => 2, 
 			sixes => 24, three_of_a_kind => 9, two_pairs => 6}, gen_yatzy_player:sheet('P22')),
 	?assertEqual(#{fours => 12, full_house => 7, large_straight => 20, one_pair => 2,
 			ones => 5, small_straight => 15, threes => 6, twos => 6}, gen_yatzy_player:sheet('P33')),
 	?assertEqual(#{full_house => 7, large_straight => 20, one_pair => 2, 
 			ones => 5, small_straight => 15, threes => 6, two_pairs => 6, twos => 6}, gen_yatzy_player:sheet('P44')).